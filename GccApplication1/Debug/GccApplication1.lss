
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006dc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  000006dc  00000770  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800064  00800064  00000774  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000774  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000007a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  000007e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e0b  00000000  00000000  00000800  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005ec  00000000  00000000  0000160b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005ae  00000000  00000000  00001bf7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  000021a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000339  00000000  00000000  000021cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a8b  00000000  00000000  00002505  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002f90  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ed       	ldi	r30, 0xDC	; 220
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a4 e6       	ldi	r26, 0x64	; 100
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 36       	cpi	r26, 0x68	; 104
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 5c 00 	call	0xb8	; 0xb8 <main>
  8a:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <time>:
  92:	fc 01       	movw	r30, r24
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	f8 94       	cli
  98:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <__data_end>
  9c:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <__data_end+0x1>
  a0:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end+0x2>
  a4:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <__data_end+0x3>
  a8:	0f be       	out	0x3f, r0	; 63
  aa:	30 97       	sbiw	r30, 0x00	; 0
  ac:	21 f0       	breq	.+8      	; 0xb6 <time+0x24>
  ae:	60 83       	st	Z, r22
  b0:	71 83       	std	Z+1, r23	; 0x01
  b2:	82 83       	std	Z+2, r24	; 0x02
  b4:	93 83       	std	Z+3, r25	; 0x03
  b6:	08 95       	ret

000000b8 <main>:
#include <time.h>
#include <util/delay.h>		/* Include Delay header file */

int main(void)
{
	DDRD |= (1<<PD5);		/* Make OC1A pin as output */
  b8:	8d 9a       	sbi	0x11, 5	; 17
	DDRA =0xFF;
  ba:	8f ef       	ldi	r24, 0xFF	; 255
  bc:	8a bb       	out	0x1a, r24	; 26
	PORTA=0x00;
  be:	1b ba       	out	0x1b, r1	; 27
	TCNT1 = 0;		/* Set timer1 count zero */
  c0:	1d bc       	out	0x2d, r1	; 45
  c2:	1c bc       	out	0x2c, r1	; 44
	ICR1 = 2499;		/* Set TOP count for timer1 in ICR1 register */
  c4:	83 ec       	ldi	r24, 0xC3	; 195
  c6:	99 e0       	ldi	r25, 0x09	; 9
  c8:	97 bd       	out	0x27, r25	; 39
  ca:	86 bd       	out	0x26, r24	; 38
	int c=0,mode=0,counter=0;
	/* Set Fast PWM, TOP in ICR1, Clear OC1A on compare match, clk/64 */
	TCCR1A = (1<<WGM11)|(1<<COM1A1);
  cc:	82 e8       	ldi	r24, 0x82	; 130
  ce:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11);
  d0:	8b e1       	ldi	r24, 0x1B	; 27
  d2:	8e bd       	out	0x2e, r24	; 46
	mode=1;
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	90 e0       	ldi	r25, 0x00	; 0
	while(1)
	{
		if(mode==7)
			mode=1;
		counter++;
		OCR1A=65;
  d8:	c1 e4       	ldi	r28, 0x41	; 65
  da:	d0 e0       	ldi	r29, 0x00	; 0
				
				case 3:
				mode++;
				OCR1A=65;
				_delay_ms(1000);
				OCR1A=175;
  dc:	0f 2e       	mov	r0, r31
  de:	ff ea       	ldi	r31, 0xAF	; 175
  e0:	2f 2e       	mov	r2, r31
  e2:	31 2c       	mov	r3, r1
  e4:	f0 2d       	mov	r31, r0
				_delay_ms(1000);
				OCR1A=65;
				srand(time(0));
				c=(rand()%5+1)*6;
  e6:	0f 2e       	mov	r0, r31
  e8:	f5 e0       	ldi	r31, 0x05	; 5
  ea:	8f 2e       	mov	r8, r31
  ec:	f0 2d       	mov	r31, r0
  ee:	91 2c       	mov	r9, r1
					{
						_delay_ms(1);
					}
					if(i==220)
					{
						OCR1A=300;
  f0:	0f 2e       	mov	r0, r31
  f2:	fc e2       	ldi	r31, 0x2C	; 44
  f4:	ef 2e       	mov	r14, r31
  f6:	ff 24       	eor	r15, r15
  f8:	f3 94       	inc	r15
  fa:	f0 2d       	mov	r31, r0
						_delay_ms(1000);
						break;
					}
				}
				PORTA=0X0A;
  fc:	0f 2e       	mov	r0, r31
  fe:	fa e0       	ldi	r31, 0x0A	; 10
 100:	af 2e       	mov	r10, r31
 102:	f0 2d       	mov	r31, r0
				_delay_ms(2000);
				PORTA=0X05;
 104:	0f 2e       	mov	r0, r31
 106:	f5 e0       	ldi	r31, 0x05	; 5
 108:	bf 2e       	mov	r11, r31
 10a:	f0 2d       	mov	r31, r0
				PORTA=0x00;
				break;
				
				
				case 3:
				mode++;
 10c:	61 2c       	mov	r6, r1
				
				case 5:
				mode++;
				OCR1A=65;
				_delay_ms(500);
				OCR1A=170;
 10e:	0f 2e       	mov	r0, r31
 110:	fa ea       	ldi	r31, 0xAA	; 170
 112:	cf 2e       	mov	r12, r31
 114:	d1 2c       	mov	r13, r1
 116:	f0 2d       	mov	r31, r0
	TCCR1B = (1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11);
	mode=1;
	while(1)
	{
		if(mode==7)
			mode=1;
 118:	01 e0       	ldi	r16, 0x01	; 1
 11a:	10 e0       	ldi	r17, 0x00	; 0
			/*srand(time(0));
			mode=(rand()%6)+1;*/
			switch(mode)
			{
				case 1:
				mode++;
 11c:	41 2c       	mov	r4, r1
				case 2:
				mode++;
				OCR1A=65;
				_delay_ms(1000);
				OCR1A=300;
				PORTA=0X09;
 11e:	0f 2e       	mov	r0, r31
 120:	f9 e0       	ldi	r31, 0x09	; 9
 122:	5f 2e       	mov	r5, r31
 124:	f0 2d       	mov	r31, r0
				}
				break;
				
				
				case 2:
				mode++;
 126:	71 2c       	mov	r7, r1
 128:	05 c0       	rjmp	.+10     	; 0x134 <main+0x7c>
	TCCR1A = (1<<WGM11)|(1<<COM1A1);
	TCCR1B = (1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11);
	mode=1;
	while(1)
	{
		if(mode==7)
 12a:	87 30       	cpi	r24, 0x07	; 7
 12c:	91 05       	cpc	r25, r1
 12e:	11 f4       	brne	.+4      	; 0x134 <main+0x7c>
			mode=1;
 130:	80 2f       	mov	r24, r16
 132:	91 2f       	mov	r25, r17
		counter++;
		OCR1A=65;
 134:	db bd       	out	0x2b, r29	; 43
 136:	ca bd       	out	0x2a, r28	; 42
		if(PINC==0x01)
 138:	23 b3       	in	r18, 0x13	; 19
 13a:	21 30       	cpi	r18, 0x01	; 1
 13c:	b1 f7       	brne	.-20     	; 0x12a <main+0x72>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 13e:	ef e0       	ldi	r30, 0x0F	; 15
 140:	f7 e2       	ldi	r31, 0x27	; 39
 142:	31 97       	sbiw	r30, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <main+0x8a>
 146:	00 c0       	rjmp	.+0      	; 0x148 <main+0x90>
 148:	00 00       	nop
		{
		_delay_ms(5);
		if(PINC==0x01)
 14a:	23 b3       	in	r18, 0x13	; 19
 14c:	21 30       	cpi	r18, 0x01	; 1
 14e:	69 f7       	brne	.-38     	; 0x12a <main+0x72>
		{
			/*srand(time(0));
			mode=(rand()%6)+1;*/
			switch(mode)
 150:	83 30       	cpi	r24, 0x03	; 3
 152:	91 05       	cpc	r25, r1
 154:	09 f4       	brne	.+2      	; 0x158 <main+0xa0>
 156:	76 c0       	rjmp	.+236    	; 0x244 <main+0x18c>
 158:	44 f4       	brge	.+16     	; 0x16a <main+0xb2>
 15a:	81 30       	cpi	r24, 0x01	; 1
 15c:	91 05       	cpc	r25, r1
 15e:	81 f0       	breq	.+32     	; 0x180 <main+0xc8>
 160:	82 30       	cpi	r24, 0x02	; 2
 162:	91 05       	cpc	r25, r1
 164:	09 f4       	brne	.+2      	; 0x168 <main+0xb0>
 166:	48 c0       	rjmp	.+144    	; 0x1f8 <main+0x140>
 168:	e0 cf       	rjmp	.-64     	; 0x12a <main+0x72>
 16a:	85 30       	cpi	r24, 0x05	; 5
 16c:	91 05       	cpc	r25, r1
 16e:	09 f4       	brne	.+2      	; 0x172 <main+0xba>
 170:	24 c1       	rjmp	.+584    	; 0x3ba <main+0x302>
 172:	0c f4       	brge	.+2      	; 0x176 <main+0xbe>
 174:	d0 c0       	rjmp	.+416    	; 0x316 <main+0x25e>
 176:	86 30       	cpi	r24, 0x06	; 6
 178:	91 05       	cpc	r25, r1
 17a:	09 f4       	brne	.+2      	; 0x17e <main+0xc6>
 17c:	79 c1       	rjmp	.+754    	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 17e:	d5 cf       	rjmp	.-86     	; 0x12a <main+0x72>
			{
				case 1:
				mode++;
				srand(time(0));
 180:	80 e0       	ldi	r24, 0x00	; 0
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 49 00 	call	0x92	; 0x92 <time>
 188:	cb 01       	movw	r24, r22
 18a:	0e 94 fe 02 	call	0x5fc	; 0x5fc <srand>
				c=(rand()%5+1)*6;
 18e:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <rand>
 192:	68 2d       	mov	r22, r8
 194:	79 2d       	mov	r23, r9
 196:	0e 94 85 02 	call	0x50a	; 0x50a <__divmodhi4>
 19a:	01 96       	adiw	r24, 0x01	; 1
 19c:	9c 01       	movw	r18, r24
 19e:	22 0f       	add	r18, r18
 1a0:	33 1f       	adc	r19, r19
 1a2:	82 0f       	add	r24, r18
 1a4:	93 1f       	adc	r25, r19
 1a6:	9c 01       	movw	r18, r24
 1a8:	22 0f       	add	r18, r18
 1aa:	33 1f       	adc	r19, r19
				
				for(int i=65;i<=300;i++)
 1ac:	41 e4       	ldi	r20, 0x41	; 65
 1ae:	50 e0       	ldi	r21, 0x00	; 0
				{
					OCR1A=i;
 1b0:	5b bd       	out	0x2b, r21	; 43
 1b2:	4a bd       	out	0x2a, r20	; 42
					for(int j=0;j<=c;j++)
 1b4:	33 23       	and	r19, r19
 1b6:	64 f0       	brlt	.+24     	; 0x1d0 <main+0x118>
 1b8:	80 e0       	ldi	r24, 0x00	; 0
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	ef ec       	ldi	r30, 0xCF	; 207
 1be:	f7 e0       	ldi	r31, 0x07	; 7
 1c0:	31 97       	sbiw	r30, 0x01	; 1
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <main+0x108>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <main+0x10e>
 1c6:	00 00       	nop
 1c8:	01 96       	adiw	r24, 0x01	; 1
 1ca:	28 17       	cp	r18, r24
 1cc:	39 07       	cpc	r19, r25
 1ce:	b4 f7       	brge	.-20     	; 0x1bc <main+0x104>
					{
						_delay_ms(1);
					}
					if(i==220)
 1d0:	4c 3d       	cpi	r20, 0xDC	; 220
 1d2:	51 05       	cpc	r21, r1
 1d4:	71 f4       	brne	.+28     	; 0x1f2 <main+0x13a>
					{
						OCR1A=300;
 1d6:	fb bc       	out	0x2b, r15	; 43
 1d8:	ea bc       	out	0x2a, r14	; 42
 1da:	ff ef       	ldi	r31, 0xFF	; 255
 1dc:	29 e6       	ldi	r18, 0x69	; 105
 1de:	88 e1       	ldi	r24, 0x18	; 24
 1e0:	f1 50       	subi	r31, 0x01	; 1
 1e2:	20 40       	sbci	r18, 0x00	; 0
 1e4:	80 40       	sbci	r24, 0x00	; 0
 1e6:	e1 f7       	brne	.-8      	; 0x1e0 <main+0x128>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <main+0x132>
 1ea:	00 00       	nop
			/*srand(time(0));
			mode=(rand()%6)+1;*/
			switch(mode)
			{
				case 1:
				mode++;
 1ec:	82 e0       	ldi	r24, 0x02	; 2
 1ee:	94 2d       	mov	r25, r4
 1f0:	a1 cf       	rjmp	.-190    	; 0x134 <main+0x7c>
				srand(time(0));
				c=(rand()%5+1)*6;
				
				for(int i=65;i<=300;i++)
 1f2:	4f 5f       	subi	r20, 0xFF	; 255
 1f4:	5f 4f       	sbci	r21, 0xFF	; 255
 1f6:	dc cf       	rjmp	.-72     	; 0x1b0 <main+0xf8>
				break;
				
				
				case 2:
				mode++;
				OCR1A=65;
 1f8:	db bd       	out	0x2b, r29	; 43
 1fa:	ca bd       	out	0x2a, r28	; 42
 1fc:	9f ef       	ldi	r25, 0xFF	; 255
 1fe:	e9 e6       	ldi	r30, 0x69	; 105
 200:	f8 e1       	ldi	r31, 0x18	; 24
 202:	91 50       	subi	r25, 0x01	; 1
 204:	e0 40       	sbci	r30, 0x00	; 0
 206:	f0 40       	sbci	r31, 0x00	; 0
 208:	e1 f7       	brne	.-8      	; 0x202 <main+0x14a>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <main+0x154>
 20c:	00 00       	nop
				_delay_ms(1000);
				OCR1A=300;
 20e:	fb bc       	out	0x2b, r15	; 43
 210:	ea bc       	out	0x2a, r14	; 42
				PORTA=0X09;
 212:	5b ba       	out	0x1b, r5	; 27
 214:	2f ef       	ldi	r18, 0xFF	; 255
 216:	8d e3       	ldi	r24, 0x3D	; 61
 218:	99 e4       	ldi	r25, 0x49	; 73
 21a:	21 50       	subi	r18, 0x01	; 1
 21c:	80 40       	sbci	r24, 0x00	; 0
 21e:	90 40       	sbci	r25, 0x00	; 0
 220:	e1 f7       	brne	.-8      	; 0x21a <main+0x162>
 222:	00 c0       	rjmp	.+0      	; 0x224 <main+0x16c>
 224:	00 00       	nop
				_delay_ms(3000);
				PORTA=0X06;
 226:	86 e0       	ldi	r24, 0x06	; 6
 228:	8b bb       	out	0x1b, r24	; 27
 22a:	ef ef       	ldi	r30, 0xFF	; 255
 22c:	f3 ed       	ldi	r31, 0xD3	; 211
 22e:	20 e3       	ldi	r18, 0x30	; 48
 230:	e1 50       	subi	r30, 0x01	; 1
 232:	f0 40       	sbci	r31, 0x00	; 0
 234:	20 40       	sbci	r18, 0x00	; 0
 236:	e1 f7       	brne	.-8      	; 0x230 <main+0x178>
 238:	00 c0       	rjmp	.+0      	; 0x23a <main+0x182>
 23a:	00 00       	nop
				_delay_ms(2000);
				PORTA=0x00;
 23c:	1b ba       	out	0x1b, r1	; 27
				}
				break;
				
				
				case 2:
				mode++;
 23e:	83 e0       	ldi	r24, 0x03	; 3
 240:	97 2d       	mov	r25, r7
				PORTA=0X09;
				_delay_ms(3000);
				PORTA=0X06;
				_delay_ms(2000);
				PORTA=0x00;
				break;
 242:	78 cf       	rjmp	.-272    	; 0x134 <main+0x7c>
				
				
				case 3:
				mode++;
				OCR1A=65;
 244:	db bd       	out	0x2b, r29	; 43
 246:	ca bd       	out	0x2a, r28	; 42
 248:	8f ef       	ldi	r24, 0xFF	; 255
 24a:	99 e6       	ldi	r25, 0x69	; 105
 24c:	e8 e1       	ldi	r30, 0x18	; 24
 24e:	81 50       	subi	r24, 0x01	; 1
 250:	90 40       	sbci	r25, 0x00	; 0
 252:	e0 40       	sbci	r30, 0x00	; 0
 254:	e1 f7       	brne	.-8      	; 0x24e <main+0x196>
 256:	00 c0       	rjmp	.+0      	; 0x258 <main+0x1a0>
 258:	00 00       	nop
				_delay_ms(1000);
				OCR1A=175;
 25a:	3b bc       	out	0x2b, r3	; 43
 25c:	2a bc       	out	0x2a, r2	; 42
 25e:	ff ef       	ldi	r31, 0xFF	; 255
 260:	29 e6       	ldi	r18, 0x69	; 105
 262:	88 e1       	ldi	r24, 0x18	; 24
 264:	f1 50       	subi	r31, 0x01	; 1
 266:	20 40       	sbci	r18, 0x00	; 0
 268:	80 40       	sbci	r24, 0x00	; 0
 26a:	e1 f7       	brne	.-8      	; 0x264 <main+0x1ac>
 26c:	00 c0       	rjmp	.+0      	; 0x26e <main+0x1b6>
 26e:	00 00       	nop
				_delay_ms(1000);
				OCR1A=65;
 270:	db bd       	out	0x2b, r29	; 43
 272:	ca bd       	out	0x2a, r28	; 42
				srand(time(0));
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	0e 94 49 00 	call	0x92	; 0x92 <time>
 27c:	cb 01       	movw	r24, r22
 27e:	0e 94 fe 02 	call	0x5fc	; 0x5fc <srand>
				c=(rand()%5+1)*6;
 282:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <rand>
 286:	68 2d       	mov	r22, r8
 288:	79 2d       	mov	r23, r9
 28a:	0e 94 85 02 	call	0x50a	; 0x50a <__divmodhi4>
 28e:	01 96       	adiw	r24, 0x01	; 1
 290:	9c 01       	movw	r18, r24
 292:	22 0f       	add	r18, r18
 294:	33 1f       	adc	r19, r19
 296:	82 0f       	add	r24, r18
 298:	93 1f       	adc	r25, r19
 29a:	9c 01       	movw	r18, r24
 29c:	22 0f       	add	r18, r18
 29e:	33 1f       	adc	r19, r19
				for(int i=65;i<=300;i++)
 2a0:	41 e4       	ldi	r20, 0x41	; 65
 2a2:	50 e0       	ldi	r21, 0x00	; 0
				{
					OCR1A=i;
 2a4:	5b bd       	out	0x2b, r21	; 43
 2a6:	4a bd       	out	0x2a, r20	; 42
					for(int j=0;j<=c;j++)
 2a8:	33 23       	and	r19, r19
 2aa:	64 f0       	brlt	.+24     	; 0x2c4 <main+0x20c>
 2ac:	80 e0       	ldi	r24, 0x00	; 0
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	ef ec       	ldi	r30, 0xCF	; 207
 2b2:	f7 e0       	ldi	r31, 0x07	; 7
 2b4:	31 97       	sbiw	r30, 0x01	; 1
 2b6:	f1 f7       	brne	.-4      	; 0x2b4 <main+0x1fc>
 2b8:	00 c0       	rjmp	.+0      	; 0x2ba <main+0x202>
 2ba:	00 00       	nop
 2bc:	01 96       	adiw	r24, 0x01	; 1
 2be:	28 17       	cp	r18, r24
 2c0:	39 07       	cpc	r19, r25
 2c2:	b4 f7       	brge	.-20     	; 0x2b0 <main+0x1f8>
					{
						_delay_ms(1);
					}
					if(i==220)
 2c4:	4c 3d       	cpi	r20, 0xDC	; 220
 2c6:	51 05       	cpc	r21, r1
 2c8:	19 f5       	brne	.+70     	; 0x310 <main+0x258>
					{
						OCR1A=300;
 2ca:	fb bc       	out	0x2b, r15	; 43
 2cc:	ea bc       	out	0x2a, r14	; 42
 2ce:	ff ef       	ldi	r31, 0xFF	; 255
 2d0:	29 e6       	ldi	r18, 0x69	; 105
 2d2:	88 e1       	ldi	r24, 0x18	; 24
 2d4:	f1 50       	subi	r31, 0x01	; 1
 2d6:	20 40       	sbci	r18, 0x00	; 0
 2d8:	80 40       	sbci	r24, 0x00	; 0
 2da:	e1 f7       	brne	.-8      	; 0x2d4 <main+0x21c>
 2dc:	00 c0       	rjmp	.+0      	; 0x2de <main+0x226>
 2de:	00 00       	nop
						_delay_ms(1000);
						break;
					}
				}
				PORTA=0X0A;
 2e0:	ab ba       	out	0x1b, r10	; 27
 2e2:	9f ef       	ldi	r25, 0xFF	; 255
 2e4:	e3 ed       	ldi	r30, 0xD3	; 211
 2e6:	f0 e3       	ldi	r31, 0x30	; 48
 2e8:	91 50       	subi	r25, 0x01	; 1
 2ea:	e0 40       	sbci	r30, 0x00	; 0
 2ec:	f0 40       	sbci	r31, 0x00	; 0
 2ee:	e1 f7       	brne	.-8      	; 0x2e8 <main+0x230>
 2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <main+0x23a>
 2f2:	00 00       	nop
				_delay_ms(2000);
				PORTA=0X05;
 2f4:	bb ba       	out	0x1b, r11	; 27
 2f6:	2f ef       	ldi	r18, 0xFF	; 255
 2f8:	83 ed       	ldi	r24, 0xD3	; 211
 2fa:	90 e3       	ldi	r25, 0x30	; 48
 2fc:	21 50       	subi	r18, 0x01	; 1
 2fe:	80 40       	sbci	r24, 0x00	; 0
 300:	90 40       	sbci	r25, 0x00	; 0
 302:	e1 f7       	brne	.-8      	; 0x2fc <main+0x244>
 304:	00 c0       	rjmp	.+0      	; 0x306 <main+0x24e>
 306:	00 00       	nop
				_delay_ms(2000);
				PORTA=0x00;
 308:	1b ba       	out	0x1b, r1	; 27
				PORTA=0x00;
				break;
				
				
				case 3:
				mode++;
 30a:	84 e0       	ldi	r24, 0x04	; 4
 30c:	96 2d       	mov	r25, r6
				PORTA=0X0A;
				_delay_ms(2000);
				PORTA=0X05;
				_delay_ms(2000);
				PORTA=0x00;
				break;
 30e:	12 cf       	rjmp	.-476    	; 0x134 <main+0x7c>
				OCR1A=175;
				_delay_ms(1000);
				OCR1A=65;
				srand(time(0));
				c=(rand()%5+1)*6;
				for(int i=65;i<=300;i++)
 310:	4f 5f       	subi	r20, 0xFF	; 255
 312:	5f 4f       	sbci	r21, 0xFF	; 255
 314:	c7 cf       	rjmp	.-114    	; 0x2a4 <main+0x1ec>
				break;
				
				
				case 4:
				mode++;
				OCR1A=65;
 316:	db bd       	out	0x2b, r29	; 43
 318:	ca bd       	out	0x2a, r28	; 42
 31a:	ef ef       	ldi	r30, 0xFF	; 255
 31c:	f9 e6       	ldi	r31, 0x69	; 105
 31e:	28 e1       	ldi	r18, 0x18	; 24
 320:	e1 50       	subi	r30, 0x01	; 1
 322:	f0 40       	sbci	r31, 0x00	; 0
 324:	20 40       	sbci	r18, 0x00	; 0
 326:	e1 f7       	brne	.-8      	; 0x320 <main+0x268>
 328:	00 c0       	rjmp	.+0      	; 0x32a <main+0x272>
 32a:	00 00       	nop
				_delay_ms(1000);
				OCR1A=300;
 32c:	fb bc       	out	0x2b, r15	; 43
 32e:	ea bc       	out	0x2a, r14	; 42
 330:	8f ef       	ldi	r24, 0xFF	; 255
 332:	93 ed       	ldi	r25, 0xD3	; 211
 334:	e0 e3       	ldi	r30, 0x30	; 48
 336:	81 50       	subi	r24, 0x01	; 1
 338:	90 40       	sbci	r25, 0x00	; 0
 33a:	e0 40       	sbci	r30, 0x00	; 0
 33c:	e1 f7       	brne	.-8      	; 0x336 <main+0x27e>
 33e:	00 c0       	rjmp	.+0      	; 0x340 <main+0x288>
 340:	00 00       	nop
				_delay_ms(2000);
				srand(time(0));
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	0e 94 49 00 	call	0x92	; 0x92 <time>
 34a:	cb 01       	movw	r24, r22
 34c:	0e 94 fe 02 	call	0x5fc	; 0x5fc <srand>
				c=(rand()%5+1)*6;
 350:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <rand>
 354:	68 2d       	mov	r22, r8
 356:	79 2d       	mov	r23, r9
 358:	0e 94 85 02 	call	0x50a	; 0x50a <__divmodhi4>
 35c:	01 96       	adiw	r24, 0x01	; 1
 35e:	9c 01       	movw	r18, r24
 360:	22 0f       	add	r18, r18
 362:	33 1f       	adc	r19, r19
 364:	82 0f       	add	r24, r18
 366:	93 1f       	adc	r25, r19
 368:	9c 01       	movw	r18, r24
 36a:	22 0f       	add	r18, r18
 36c:	33 1f       	adc	r19, r19
					for(int j=0;j<=c;j++)
					{
						_delay_ms(1);
					}
				}
				for(int i=170;i<=300;i++)
 36e:	4a ea       	ldi	r20, 0xAA	; 170
 370:	50 e0       	ldi	r21, 0x00	; 0
				{
					OCR1A=i;
 372:	5b bd       	out	0x2b, r21	; 43
 374:	4a bd       	out	0x2a, r20	; 42
					for(int j=0;j<=c;j++)
 376:	33 23       	and	r19, r19
 378:	64 f0       	brlt	.+24     	; 0x392 <main+0x2da>
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	ef ec       	ldi	r30, 0xCF	; 207
 380:	f7 e0       	ldi	r31, 0x07	; 7
 382:	31 97       	sbiw	r30, 0x01	; 1
 384:	f1 f7       	brne	.-4      	; 0x382 <main+0x2ca>
 386:	00 c0       	rjmp	.+0      	; 0x388 <main+0x2d0>
 388:	00 00       	nop
 38a:	01 96       	adiw	r24, 0x01	; 1
 38c:	28 17       	cp	r18, r24
 38e:	39 07       	cpc	r19, r25
 390:	b4 f7       	brge	.-20     	; 0x37e <main+0x2c6>
					for(int j=0;j<=c;j++)
					{
						_delay_ms(1);
					}
				}
				for(int i=170;i<=300;i++)
 392:	4f 5f       	subi	r20, 0xFF	; 255
 394:	5f 4f       	sbci	r21, 0xFF	; 255
 396:	4d 32       	cpi	r20, 0x2D	; 45
 398:	f1 e0       	ldi	r31, 0x01	; 1
 39a:	5f 07       	cpc	r21, r31
 39c:	51 f7       	brne	.-44     	; 0x372 <main+0x2ba>
 39e:	2f ef       	ldi	r18, 0xFF	; 255
 3a0:	89 e6       	ldi	r24, 0x69	; 105
 3a2:	98 e1       	ldi	r25, 0x18	; 24
 3a4:	21 50       	subi	r18, 0x01	; 1
 3a6:	80 40       	sbci	r24, 0x00	; 0
 3a8:	90 40       	sbci	r25, 0x00	; 0
 3aa:	e1 f7       	brne	.-8      	; 0x3a4 <main+0x2ec>
 3ac:	00 c0       	rjmp	.+0      	; 0x3ae <main+0x2f6>
 3ae:	00 00       	nop
					{
						_delay_ms(1);
					}
				}
				_delay_ms(1000);
				OCR1A=65;
 3b0:	db bd       	out	0x2b, r29	; 43
 3b2:	ca bd       	out	0x2a, r28	; 42
				PORTA=0x00;
				break;
				
				
				case 4:
				mode++;
 3b4:	88 2d       	mov	r24, r8
 3b6:	99 2d       	mov	r25, r9
						_delay_ms(1);
					}
				}
				_delay_ms(1000);
				OCR1A=65;
				break;
 3b8:	bd ce       	rjmp	.-646    	; 0x134 <main+0x7c>
				
				case 5:
				mode++;
				OCR1A=65;
 3ba:	db bd       	out	0x2b, r29	; 43
 3bc:	ca bd       	out	0x2a, r28	; 42
 3be:	ef ef       	ldi	r30, 0xFF	; 255
 3c0:	f4 e3       	ldi	r31, 0x34	; 52
 3c2:	2c e0       	ldi	r18, 0x0C	; 12
 3c4:	e1 50       	subi	r30, 0x01	; 1
 3c6:	f0 40       	sbci	r31, 0x00	; 0
 3c8:	20 40       	sbci	r18, 0x00	; 0
 3ca:	e1 f7       	brne	.-8      	; 0x3c4 <main+0x30c>
 3cc:	00 c0       	rjmp	.+0      	; 0x3ce <main+0x316>
 3ce:	00 00       	nop
				_delay_ms(500);
				OCR1A=170;
 3d0:	db bc       	out	0x2b, r13	; 43
 3d2:	ca bc       	out	0x2a, r12	; 42
 3d4:	8f ef       	ldi	r24, 0xFF	; 255
 3d6:	94 e3       	ldi	r25, 0x34	; 52
 3d8:	ec e0       	ldi	r30, 0x0C	; 12
 3da:	81 50       	subi	r24, 0x01	; 1
 3dc:	90 40       	sbci	r25, 0x00	; 0
 3de:	e0 40       	sbci	r30, 0x00	; 0
 3e0:	e1 f7       	brne	.-8      	; 0x3da <main+0x322>
 3e2:	00 c0       	rjmp	.+0      	; 0x3e4 <main+0x32c>
 3e4:	00 00       	nop
				_delay_ms(500);
				OCR1A=65;
 3e6:	db bd       	out	0x2b, r29	; 43
 3e8:	ca bd       	out	0x2a, r28	; 42
 3ea:	ff ef       	ldi	r31, 0xFF	; 255
 3ec:	24 e3       	ldi	r18, 0x34	; 52
 3ee:	8c e0       	ldi	r24, 0x0C	; 12
 3f0:	f1 50       	subi	r31, 0x01	; 1
 3f2:	20 40       	sbci	r18, 0x00	; 0
 3f4:	80 40       	sbci	r24, 0x00	; 0
 3f6:	e1 f7       	brne	.-8      	; 0x3f0 <main+0x338>
 3f8:	00 c0       	rjmp	.+0      	; 0x3fa <main+0x342>
 3fa:	00 00       	nop
				_delay_ms(500);
				OCR1A=170;
 3fc:	db bc       	out	0x2b, r13	; 43
 3fe:	ca bc       	out	0x2a, r12	; 42
 400:	9f ef       	ldi	r25, 0xFF	; 255
 402:	e4 e3       	ldi	r30, 0x34	; 52
 404:	fc e0       	ldi	r31, 0x0C	; 12
 406:	91 50       	subi	r25, 0x01	; 1
 408:	e0 40       	sbci	r30, 0x00	; 0
 40a:	f0 40       	sbci	r31, 0x00	; 0
 40c:	e1 f7       	brne	.-8      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 40e:	00 c0       	rjmp	.+0      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 410:	00 00       	nop
				_delay_ms(500);
				OCR1A=65;
 412:	db bd       	out	0x2b, r29	; 43
 414:	ca bd       	out	0x2a, r28	; 42
 416:	2f ef       	ldi	r18, 0xFF	; 255
 418:	84 e3       	ldi	r24, 0x34	; 52
 41a:	9c e0       	ldi	r25, 0x0C	; 12
 41c:	21 50       	subi	r18, 0x01	; 1
 41e:	80 40       	sbci	r24, 0x00	; 0
 420:	90 40       	sbci	r25, 0x00	; 0
 422:	e1 f7       	brne	.-8      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 424:	00 c0       	rjmp	.+0      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 426:	00 00       	nop
				_delay_ms(500);
				OCR1A=170;
 428:	db bc       	out	0x2b, r13	; 43
 42a:	ca bc       	out	0x2a, r12	; 42
 42c:	ef ef       	ldi	r30, 0xFF	; 255
 42e:	f4 e3       	ldi	r31, 0x34	; 52
 430:	2c e0       	ldi	r18, 0x0C	; 12
 432:	e1 50       	subi	r30, 0x01	; 1
 434:	f0 40       	sbci	r31, 0x00	; 0
 436:	20 40       	sbci	r18, 0x00	; 0
 438:	e1 f7       	brne	.-8      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 43a:	00 c0       	rjmp	.+0      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 43c:	00 00       	nop
				_delay_ms(500);
				OCR1A=65;
 43e:	db bd       	out	0x2b, r29	; 43
 440:	ca bd       	out	0x2a, r28	; 42
 442:	8f ef       	ldi	r24, 0xFF	; 255
 444:	94 e3       	ldi	r25, 0x34	; 52
 446:	ec e0       	ldi	r30, 0x0C	; 12
 448:	81 50       	subi	r24, 0x01	; 1
 44a:	90 40       	sbci	r25, 0x00	; 0
 44c:	e0 40       	sbci	r30, 0x00	; 0
 44e:	e1 f7       	brne	.-8      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 450:	00 c0       	rjmp	.+0      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 452:	00 00       	nop
				_delay_ms(500);
				OCR1A=300;
 454:	fb bc       	out	0x2b, r15	; 43
 456:	ea bc       	out	0x2a, r14	; 42
 458:	ff ef       	ldi	r31, 0xFF	; 255
 45a:	24 e3       	ldi	r18, 0x34	; 52
 45c:	8c e0       	ldi	r24, 0x0C	; 12
 45e:	f1 50       	subi	r31, 0x01	; 1
 460:	20 40       	sbci	r18, 0x00	; 0
 462:	80 40       	sbci	r24, 0x00	; 0
 464:	e1 f7       	brne	.-8      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 466:	00 c0       	rjmp	.+0      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 468:	00 00       	nop
				_delay_ms(1000);
				OCR1A=65;
				break;
				
				case 5:
				mode++;
 46a:	86 e0       	ldi	r24, 0x06	; 6
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	62 ce       	rjmp	.-828    	; 0x134 <main+0x7c>
				break;
				
				
				case 6:
				mode++;
				OCR1A=65;
 470:	db bd       	out	0x2b, r29	; 43
 472:	ca bd       	out	0x2a, r28	; 42
 474:	9f ef       	ldi	r25, 0xFF	; 255
 476:	e9 e6       	ldi	r30, 0x69	; 105
 478:	f8 e1       	ldi	r31, 0x18	; 24
 47a:	91 50       	subi	r25, 0x01	; 1
 47c:	e0 40       	sbci	r30, 0x00	; 0
 47e:	f0 40       	sbci	r31, 0x00	; 0
 480:	e1 f7       	brne	.-8      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 482:	00 c0       	rjmp	.+0      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 484:	00 00       	nop
				_delay_ms(1000);
				OCR1A=300;
 486:	fb bc       	out	0x2b, r15	; 43
 488:	ea bc       	out	0x2a, r14	; 42
				PORTA=0X0A;
 48a:	ab ba       	out	0x1b, r10	; 27
 48c:	2f ef       	ldi	r18, 0xFF	; 255
 48e:	83 ed       	ldi	r24, 0xD3	; 211
 490:	90 e3       	ldi	r25, 0x30	; 48
 492:	21 50       	subi	r18, 0x01	; 1
 494:	80 40       	sbci	r24, 0x00	; 0
 496:	90 40       	sbci	r25, 0x00	; 0
 498:	e1 f7       	brne	.-8      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 49a:	00 c0       	rjmp	.+0      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 49c:	00 00       	nop
				_delay_ms(2000);
				PORTA=0X05;
 49e:	bb ba       	out	0x1b, r11	; 27
 4a0:	ef ef       	ldi	r30, 0xFF	; 255
 4a2:	f3 ed       	ldi	r31, 0xD3	; 211
 4a4:	20 e3       	ldi	r18, 0x30	; 48
 4a6:	e1 50       	subi	r30, 0x01	; 1
 4a8:	f0 40       	sbci	r31, 0x00	; 0
 4aa:	20 40       	sbci	r18, 0x00	; 0
 4ac:	e1 f7       	brne	.-8      	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 4ae:	00 c0       	rjmp	.+0      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4b0:	00 00       	nop
				_delay_ms(2000);
				PORTA=0X0A;
 4b2:	ab ba       	out	0x1b, r10	; 27
 4b4:	8f ef       	ldi	r24, 0xFF	; 255
 4b6:	93 ed       	ldi	r25, 0xD3	; 211
 4b8:	e0 e3       	ldi	r30, 0x30	; 48
 4ba:	81 50       	subi	r24, 0x01	; 1
 4bc:	90 40       	sbci	r25, 0x00	; 0
 4be:	e0 40       	sbci	r30, 0x00	; 0
 4c0:	e1 f7       	brne	.-8      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4c2:	00 c0       	rjmp	.+0      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4c4:	00 00       	nop
				_delay_ms(2000);
				PORTA=0X05;
 4c6:	bb ba       	out	0x1b, r11	; 27
 4c8:	ff ef       	ldi	r31, 0xFF	; 255
 4ca:	23 ed       	ldi	r18, 0xD3	; 211
 4cc:	80 e3       	ldi	r24, 0x30	; 48
 4ce:	f1 50       	subi	r31, 0x01	; 1
 4d0:	20 40       	sbci	r18, 0x00	; 0
 4d2:	80 40       	sbci	r24, 0x00	; 0
 4d4:	e1 f7       	brne	.-8      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4d6:	00 c0       	rjmp	.+0      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4d8:	00 00       	nop
				_delay_ms(2000);
				PORTA=0X0A;
 4da:	ab ba       	out	0x1b, r10	; 27
 4dc:	9f ef       	ldi	r25, 0xFF	; 255
 4de:	e3 ed       	ldi	r30, 0xD3	; 211
 4e0:	f0 e3       	ldi	r31, 0x30	; 48
 4e2:	91 50       	subi	r25, 0x01	; 1
 4e4:	e0 40       	sbci	r30, 0x00	; 0
 4e6:	f0 40       	sbci	r31, 0x00	; 0
 4e8:	e1 f7       	brne	.-8      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4ea:	00 c0       	rjmp	.+0      	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4ec:	00 00       	nop
				_delay_ms(2000);
				PORTA=0X05;
 4ee:	bb ba       	out	0x1b, r11	; 27
 4f0:	2f ef       	ldi	r18, 0xFF	; 255
 4f2:	83 ed       	ldi	r24, 0xD3	; 211
 4f4:	90 e3       	ldi	r25, 0x30	; 48
 4f6:	21 50       	subi	r18, 0x01	; 1
 4f8:	80 40       	sbci	r24, 0x00	; 0
 4fa:	90 40       	sbci	r25, 0x00	; 0
 4fc:	e1 f7       	brne	.-8      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4fe:	00 c0       	rjmp	.+0      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 500:	00 00       	nop
				_delay_ms(2000);
				PORTA=0x00;
 502:	1b ba       	out	0x1b, r1	; 27
	TCCR1B = (1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11);
	mode=1;
	while(1)
	{
		if(mode==7)
			mode=1;
 504:	80 2f       	mov	r24, r16
 506:	91 2f       	mov	r25, r17
 508:	15 ce       	rjmp	.-982    	; 0x134 <main+0x7c>

0000050a <__divmodhi4>:
 50a:	97 fb       	bst	r25, 7
 50c:	07 2e       	mov	r0, r23
 50e:	16 f4       	brtc	.+4      	; 0x514 <__divmodhi4+0xa>
 510:	00 94       	com	r0
 512:	07 d0       	rcall	.+14     	; 0x522 <__divmodhi4_neg1>
 514:	77 fd       	sbrc	r23, 7
 516:	09 d0       	rcall	.+18     	; 0x52a <__divmodhi4_neg2>
 518:	0e 94 99 02 	call	0x532	; 0x532 <__udivmodhi4>
 51c:	07 fc       	sbrc	r0, 7
 51e:	05 d0       	rcall	.+10     	; 0x52a <__divmodhi4_neg2>
 520:	3e f4       	brtc	.+14     	; 0x530 <__divmodhi4_exit>

00000522 <__divmodhi4_neg1>:
 522:	90 95       	com	r25
 524:	81 95       	neg	r24
 526:	9f 4f       	sbci	r25, 0xFF	; 255
 528:	08 95       	ret

0000052a <__divmodhi4_neg2>:
 52a:	70 95       	com	r23
 52c:	61 95       	neg	r22
 52e:	7f 4f       	sbci	r23, 0xFF	; 255

00000530 <__divmodhi4_exit>:
 530:	08 95       	ret

00000532 <__udivmodhi4>:
 532:	aa 1b       	sub	r26, r26
 534:	bb 1b       	sub	r27, r27
 536:	51 e1       	ldi	r21, 0x11	; 17
 538:	07 c0       	rjmp	.+14     	; 0x548 <__udivmodhi4_ep>

0000053a <__udivmodhi4_loop>:
 53a:	aa 1f       	adc	r26, r26
 53c:	bb 1f       	adc	r27, r27
 53e:	a6 17       	cp	r26, r22
 540:	b7 07       	cpc	r27, r23
 542:	10 f0       	brcs	.+4      	; 0x548 <__udivmodhi4_ep>
 544:	a6 1b       	sub	r26, r22
 546:	b7 0b       	sbc	r27, r23

00000548 <__udivmodhi4_ep>:
 548:	88 1f       	adc	r24, r24
 54a:	99 1f       	adc	r25, r25
 54c:	5a 95       	dec	r21
 54e:	a9 f7       	brne	.-22     	; 0x53a <__udivmodhi4_loop>
 550:	80 95       	com	r24
 552:	90 95       	com	r25
 554:	bc 01       	movw	r22, r24
 556:	cd 01       	movw	r24, r26
 558:	08 95       	ret

0000055a <do_rand>:
 55a:	8f 92       	push	r8
 55c:	9f 92       	push	r9
 55e:	af 92       	push	r10
 560:	bf 92       	push	r11
 562:	cf 92       	push	r12
 564:	df 92       	push	r13
 566:	ef 92       	push	r14
 568:	ff 92       	push	r15
 56a:	cf 93       	push	r28
 56c:	df 93       	push	r29
 56e:	ec 01       	movw	r28, r24
 570:	68 81       	ld	r22, Y
 572:	79 81       	ldd	r23, Y+1	; 0x01
 574:	8a 81       	ldd	r24, Y+2	; 0x02
 576:	9b 81       	ldd	r25, Y+3	; 0x03
 578:	61 15       	cp	r22, r1
 57a:	71 05       	cpc	r23, r1
 57c:	81 05       	cpc	r24, r1
 57e:	91 05       	cpc	r25, r1
 580:	21 f4       	brne	.+8      	; 0x58a <do_rand+0x30>
 582:	64 e2       	ldi	r22, 0x24	; 36
 584:	79 ed       	ldi	r23, 0xD9	; 217
 586:	8b e5       	ldi	r24, 0x5B	; 91
 588:	97 e0       	ldi	r25, 0x07	; 7
 58a:	2d e1       	ldi	r18, 0x1D	; 29
 58c:	33 ef       	ldi	r19, 0xF3	; 243
 58e:	41 e0       	ldi	r20, 0x01	; 1
 590:	50 e0       	ldi	r21, 0x00	; 0
 592:	0e 94 09 03 	call	0x612	; 0x612 <__divmodsi4>
 596:	49 01       	movw	r8, r18
 598:	5a 01       	movw	r10, r20
 59a:	9b 01       	movw	r18, r22
 59c:	ac 01       	movw	r20, r24
 59e:	a7 ea       	ldi	r26, 0xA7	; 167
 5a0:	b1 e4       	ldi	r27, 0x41	; 65
 5a2:	0e 94 28 03 	call	0x650	; 0x650 <__muluhisi3>
 5a6:	6b 01       	movw	r12, r22
 5a8:	7c 01       	movw	r14, r24
 5aa:	ac ee       	ldi	r26, 0xEC	; 236
 5ac:	b4 ef       	ldi	r27, 0xF4	; 244
 5ae:	a5 01       	movw	r20, r10
 5b0:	94 01       	movw	r18, r8
 5b2:	0e 94 36 03 	call	0x66c	; 0x66c <__mulohisi3>
 5b6:	dc 01       	movw	r26, r24
 5b8:	cb 01       	movw	r24, r22
 5ba:	8c 0d       	add	r24, r12
 5bc:	9d 1d       	adc	r25, r13
 5be:	ae 1d       	adc	r26, r14
 5c0:	bf 1d       	adc	r27, r15
 5c2:	b7 ff       	sbrs	r27, 7
 5c4:	03 c0       	rjmp	.+6      	; 0x5cc <do_rand+0x72>
 5c6:	01 97       	sbiw	r24, 0x01	; 1
 5c8:	a1 09       	sbc	r26, r1
 5ca:	b0 48       	sbci	r27, 0x80	; 128
 5cc:	88 83       	st	Y, r24
 5ce:	99 83       	std	Y+1, r25	; 0x01
 5d0:	aa 83       	std	Y+2, r26	; 0x02
 5d2:	bb 83       	std	Y+3, r27	; 0x03
 5d4:	9f 77       	andi	r25, 0x7F	; 127
 5d6:	df 91       	pop	r29
 5d8:	cf 91       	pop	r28
 5da:	ff 90       	pop	r15
 5dc:	ef 90       	pop	r14
 5de:	df 90       	pop	r13
 5e0:	cf 90       	pop	r12
 5e2:	bf 90       	pop	r11
 5e4:	af 90       	pop	r10
 5e6:	9f 90       	pop	r9
 5e8:	8f 90       	pop	r8
 5ea:	08 95       	ret

000005ec <rand_r>:
 5ec:	0e 94 ad 02 	call	0x55a	; 0x55a <do_rand>
 5f0:	08 95       	ret

000005f2 <rand>:
 5f2:	80 e6       	ldi	r24, 0x60	; 96
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	0e 94 ad 02 	call	0x55a	; 0x55a <do_rand>
 5fa:	08 95       	ret

000005fc <srand>:
 5fc:	a0 e0       	ldi	r26, 0x00	; 0
 5fe:	b0 e0       	ldi	r27, 0x00	; 0
 600:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 604:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 608:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 60c:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 610:	08 95       	ret

00000612 <__divmodsi4>:
 612:	05 2e       	mov	r0, r21
 614:	97 fb       	bst	r25, 7
 616:	1e f4       	brtc	.+6      	; 0x61e <__divmodsi4+0xc>
 618:	00 94       	com	r0
 61a:	0e 94 20 03 	call	0x640	; 0x640 <__negsi2>
 61e:	57 fd       	sbrc	r21, 7
 620:	07 d0       	rcall	.+14     	; 0x630 <__divmodsi4_neg2>
 622:	0e 94 3b 03 	call	0x676	; 0x676 <__udivmodsi4>
 626:	07 fc       	sbrc	r0, 7
 628:	03 d0       	rcall	.+6      	; 0x630 <__divmodsi4_neg2>
 62a:	4e f4       	brtc	.+18     	; 0x63e <__divmodsi4_exit>
 62c:	0c 94 20 03 	jmp	0x640	; 0x640 <__negsi2>

00000630 <__divmodsi4_neg2>:
 630:	50 95       	com	r21
 632:	40 95       	com	r20
 634:	30 95       	com	r19
 636:	21 95       	neg	r18
 638:	3f 4f       	sbci	r19, 0xFF	; 255
 63a:	4f 4f       	sbci	r20, 0xFF	; 255
 63c:	5f 4f       	sbci	r21, 0xFF	; 255

0000063e <__divmodsi4_exit>:
 63e:	08 95       	ret

00000640 <__negsi2>:
 640:	90 95       	com	r25
 642:	80 95       	com	r24
 644:	70 95       	com	r23
 646:	61 95       	neg	r22
 648:	7f 4f       	sbci	r23, 0xFF	; 255
 64a:	8f 4f       	sbci	r24, 0xFF	; 255
 64c:	9f 4f       	sbci	r25, 0xFF	; 255
 64e:	08 95       	ret

00000650 <__muluhisi3>:
 650:	0e 94 5d 03 	call	0x6ba	; 0x6ba <__umulhisi3>
 654:	a5 9f       	mul	r26, r21
 656:	90 0d       	add	r25, r0
 658:	b4 9f       	mul	r27, r20
 65a:	90 0d       	add	r25, r0
 65c:	a4 9f       	mul	r26, r20
 65e:	80 0d       	add	r24, r0
 660:	91 1d       	adc	r25, r1
 662:	11 24       	eor	r1, r1
 664:	08 95       	ret

00000666 <__mulshisi3>:
 666:	b7 ff       	sbrs	r27, 7
 668:	0c 94 28 03 	jmp	0x650	; 0x650 <__muluhisi3>

0000066c <__mulohisi3>:
 66c:	0e 94 28 03 	call	0x650	; 0x650 <__muluhisi3>
 670:	82 1b       	sub	r24, r18
 672:	93 0b       	sbc	r25, r19
 674:	08 95       	ret

00000676 <__udivmodsi4>:
 676:	a1 e2       	ldi	r26, 0x21	; 33
 678:	1a 2e       	mov	r1, r26
 67a:	aa 1b       	sub	r26, r26
 67c:	bb 1b       	sub	r27, r27
 67e:	fd 01       	movw	r30, r26
 680:	0d c0       	rjmp	.+26     	; 0x69c <__udivmodsi4_ep>

00000682 <__udivmodsi4_loop>:
 682:	aa 1f       	adc	r26, r26
 684:	bb 1f       	adc	r27, r27
 686:	ee 1f       	adc	r30, r30
 688:	ff 1f       	adc	r31, r31
 68a:	a2 17       	cp	r26, r18
 68c:	b3 07       	cpc	r27, r19
 68e:	e4 07       	cpc	r30, r20
 690:	f5 07       	cpc	r31, r21
 692:	20 f0       	brcs	.+8      	; 0x69c <__udivmodsi4_ep>
 694:	a2 1b       	sub	r26, r18
 696:	b3 0b       	sbc	r27, r19
 698:	e4 0b       	sbc	r30, r20
 69a:	f5 0b       	sbc	r31, r21

0000069c <__udivmodsi4_ep>:
 69c:	66 1f       	adc	r22, r22
 69e:	77 1f       	adc	r23, r23
 6a0:	88 1f       	adc	r24, r24
 6a2:	99 1f       	adc	r25, r25
 6a4:	1a 94       	dec	r1
 6a6:	69 f7       	brne	.-38     	; 0x682 <__udivmodsi4_loop>
 6a8:	60 95       	com	r22
 6aa:	70 95       	com	r23
 6ac:	80 95       	com	r24
 6ae:	90 95       	com	r25
 6b0:	9b 01       	movw	r18, r22
 6b2:	ac 01       	movw	r20, r24
 6b4:	bd 01       	movw	r22, r26
 6b6:	cf 01       	movw	r24, r30
 6b8:	08 95       	ret

000006ba <__umulhisi3>:
 6ba:	a2 9f       	mul	r26, r18
 6bc:	b0 01       	movw	r22, r0
 6be:	b3 9f       	mul	r27, r19
 6c0:	c0 01       	movw	r24, r0
 6c2:	a3 9f       	mul	r26, r19
 6c4:	70 0d       	add	r23, r0
 6c6:	81 1d       	adc	r24, r1
 6c8:	11 24       	eor	r1, r1
 6ca:	91 1d       	adc	r25, r1
 6cc:	b2 9f       	mul	r27, r18
 6ce:	70 0d       	add	r23, r0
 6d0:	81 1d       	adc	r24, r1
 6d2:	11 24       	eor	r1, r1
 6d4:	91 1d       	adc	r25, r1
 6d6:	08 95       	ret

000006d8 <_exit>:
 6d8:	f8 94       	cli

000006da <__stop_program>:
 6da:	ff cf       	rjmp	.-2      	; 0x6da <__stop_program>
